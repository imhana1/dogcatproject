-- 1. user_member : 다른 테이블들이 참조하는 가장 기본 테이블
CREATE TABLE user_member (
	username varchar2(10) NOT NULL,
	password varchar2(70) NULL,
	role varchar2(4) NULL,
	status varchar2(5) NULL,
	e_code varchar2(20) NULL,
	email varchar2(30) Null,
	count number(1) NULL,
	sign_dt date NULL,
	is_locked number(1) NULL,
	CONSTRAINT PK_USER_MEMBER PRIMARY KEY (username)
);

-- 2. nomal_member : user_member 참조
CREATE TABLE nomal_member (
	n_username varchar2(10) NOT NULL,
	n_name varchar2(10) NULL,
	n_address varchar2(30) NULL,
	n_tel number(11) NULL,
	n_birthday date NULL,
	n_location number(25,15) NULL,
	n_longitude number(25,15) NULL,
	CONSTRAINT PK_NOMAL_MEMBER PRIMARY KEY (n_username),
	CONSTRAINT FK_user_member_TO_nomal_member_1 FOREIGN KEY (n_username) REFERENCES user_member (username)
);

-- 3. hospital_member : user_member 참조
CREATE TABLE hospital_member (
	h_username varchar2(10) NOT NULL,
	director varchar2(10)  NULL,
	hospital varchar2(10) NULL,
	h_tel varchar2(11) NULL,
	h_reptel varchar2(10) NULL,
	h_address varchar2(70) NULL,
	h_choice number(1) NULL,
	h_profile clob NULL,
	h_location number(25,15) NULL,
	h_longitude number(25,15) NULL,
	open_time varchar2(15) NULL,
	close_time varchar2(15) NULL,
	d_profile clob NULL,
	h_birthday date NULL,
	h_Introduction varchar2(1000) NULL,
	educational varchar2(200) NULL,
	CONSTRAINT PK_HOSPITAL_MEMBER PRIMARY KEY (h_username),
	CONSTRAINT FK_user_member_TO_hospital_member_1 FOREIGN KEY (h_username) REFERENCES user_member (username)
);

-- 4. adoption : user_member 참조
CREATE TABLE adoption (
	ano number(10) NOT NULL,
	a_profile clob NULL,
	a_name varchar2(10) NULL,
	a_age number(5) NULL,
	a_breed varchar2(10) NULL,
	a_city varchar2(50) NULL,
	a_location varchar2(50) NULL,
	a_found_location varchar2(50) NULL,
	username varchar2(10) NOT NULL,
	a_write_day date NULL,
	a_content varchar2(1000) NULL,
	a_is_adopted number(1) NULL,
	CONSTRAINT PK_ADOPTION PRIMARY KEY (ano),
	CONSTRAINT FK_user_member_TO_adoption_1 FOREIGN KEY (username) REFERENCES user_member (username)
);

-- 5. pet : nomal_member 참조
CREATE TABLE pet (
	pno number(10) NOT NULL,
	n_username varchar2(10) NOT NULL,
	animal_types varchar2(10) NULL,
	microchipped number(1) NULL,
	breed varchar2(10) NULL,
	p_name varchar2(10) NULL,
	p_age number(5) NULL,
	p_weight number(5) NULL,
	has_allergies number(1) NULL,
	has_insurance number(1) NULL,
	p_profile clob NULL,
	CONSTRAINT PK_PET PRIMARY KEY (pno, n_username),
	CONSTRAINT FK_nomal_member_TO_pet_1 FOREIGN KEY (n_username) REFERENCES nomal_member (n_username)
);

-- 6. treat : hospital_member 참조
CREATE TABLE treat (
	tno number(10) NOT NULL,
	t_writer varchar2(10) NOT NULL,
	t_content varchar2(1000) NULL,
	t_title varchar2(10) NULL,
	CONSTRAINT PK_TREAT PRIMARY KEY (tno, t_writer),
	CONSTRAINT FK_hospital_member_TO_treat_1 FOREIGN KEY (t_writer) REFERENCES hospital_member (h_username)
);

-- 7. reservation : nomal_member, hospital_member, pet 참조 s_id 추가
CREATE TABLE reservation (
	rno number(10) NOT NULL,
	n_username varchar2(10) NOT NULL,
	schedule date NULL,
	h_username varchar2(10) NOT NULL,
	pno number(10) NOT NULL,
	r_status varchar2(5) NULL,
	s_id number(10) NULL,
	CONSTRAINT PK_RESERVATION PRIMARY KEY (rno),
	CONSTRAINT FK_nomal_member_TO_reservation_1 FOREIGN KEY (n_username) REFERENCES nomal_member (n_username),
	CONSTRAINT FK_hospital_member_TO_reservation_1 FOREIGN KEY (h_username) REFERENCES hospital_member (h_username),
	CONSTRAINT FK_pet_TO_reservation_1 FOREIGN KEY (pno, n_username) REFERENCES pet (pno, n_username)
);

-- 8. pay : reservation, hospital_member, nomal_member 참조
CREATE TABLE pay (
                     rno number(10) NOT NULL,
                     h_username varchar2(10) NOT NULL,
                     n_username varchar2(10) NOT NULL,
                     orderId varchar2(200) NOT NULL,
                     paymentKey varchar2(64) NOT NULL,
                     p_username varchar2(10) NULL,
                     p_name varchar2(100) NULL,
                     p_time date NULL,
                     p_price number(10) NULL,
                     p_status varchar2(20),
                     CONSTRAINT PK_PAY PRIMARY KEY (rno, h_username, n_username),
                     CONSTRAINT FK_reservation_TO_pay_1 FOREIGN KEY (rno) REFERENCES reservation (rno),
                     CONSTRAINT FK_hospital_member_TO_pay_1 FOREIGN KEY (h_username) REFERENCES hospital_member (h_username),
                     CONSTRAINT FK_nomal_member_TO_pay_1 FOREIGN KEY (n_username) REFERENCES nomal_member (n_username)
);


-- 10. schedule : hospital_member 참조 기본키 s_id 추가 미용 시간과 진료 시간을 구분하기 위한 기본키
CREATE TABLE schedule (
	s_id number(10) NOT NULL,
	schedule date NOT NULL,
	h_username varchar2(10) NOT NULL,
	block_status number(1) NULL,
	h_notice varchar2(100) NULL,
	s_choice varchar2(10) NULL,
	CONSTRAINT PK_SCHEDULE PRIMARY KEY (s_id , schedule, h_username),
	CONSTRAINT FK_hospital_member_TO_schedule_1 FOREIGN KEY (h_username) REFERENCES hospital_member (h_username)
);

-- 11. wish_list : adoption, user_member 참조
CREATE TABLE wish_list (
	ano number(10) NOT NULL,
	username varchar2(10) NOT NULL,
	CONSTRAINT PK_WISH_LIST PRIMARY KEY (ano, username),
	CONSTRAINT FK_adoption_TO_wish_list_1 FOREIGN KEY (ano) REFERENCES adoption (ano),
	CONSTRAINT FK_user_member_TO_wish_list_1 FOREIGN KEY (username) REFERENCES user_member (username)
);

-- 12. surgical_history : pet 참조
CREATE TABLE surgical_history (
	sno number(10) NOT NULL,
	pno number(10) NOT NULL,
	n_username varchar2(10) NOT NULL,
	s_name varchar2(10) NULL,
	s_content varchar2(50) NULL,
	s_day date NULL,
	CONSTRAINT PK_SURGICAL_HISTORY PRIMARY KEY (sno, pno, n_username),
	CONSTRAINT FK_pet_TO_surgical_history_1 FOREIGN KEY (pno, n_username) REFERENCES pet (pno, n_username)
);

-- 13. chronic_illness : pet 참조
CREATE TABLE chronic_illness (
	cno number(10) NOT NULL,
	pno number(10) NOT NULL,
	n_username varchar2(10) NOT NULL,
	i_name varchar2(10) NULL,
	CONSTRAINT PK_CHRONIC_ILLNESS PRIMARY KEY (cno, pno, n_username),
	CONSTRAINT FK_pet_TO_chronic_illness_1 FOREIGN KEY (pno, n_username) REFERENCES pet (pno, n_username)
);

-- 14. wish : adoption, user_member 참조
CREATE TABLE wish (
	ano number(10) NOT NULL,
	username varchar2(10) NOT NULL,
	CONSTRAINT PK_WISH PRIMARY KEY (ano, username),
	CONSTRAINT FK_adoption_TO_wish_1 FOREIGN KEY (ano) REFERENCES adoption (ano),
	CONSTRAINT FK_user_member_TO_wish_1 FOREIGN KEY (username) REFERENCES user_member (username)
);

-- 15. qna_question : user_member 참조
CREATE TABLE qna_question (
	qno number(10) NOT NULL,
	q_title varchar2(50) NULL,
	username varchar2(10) NOT NULL,
	q_write_day date NULL,
	q_content varchar2(1000) NULL,
	q_is_answered number(1) NULL,
	CONSTRAINT PK_QNA_QUESTION PRIMARY KEY (qno),
	CONSTRAINT FK_user_member_TO_qna_question_1 FOREIGN KEY (username) REFERENCES user_member (username)
);

-- 16. qna_answer : qna_question, user_member 참조
CREATE TABLE qna_answer (
	qno number(10) NOT NULL,
	username varchar2(10) NOT NULL,
	answer_write_day date NULL,
	answer_content varchar2(1000) NULL,
	CONSTRAINT PK_QNA_ANSWER PRIMARY KEY (qno),
	CONSTRAINT FK_qna_question_TO_qna_answer_1 FOREIGN KEY (qno) REFERENCES qna_question (qno),
	CONSTRAINT FK_user_member_TO_qna_answer_1 FOREIGN KEY (username) REFERENCES user_member (username)
);

-- 17. review : reservation, user_member, hospital_member 참조
CREATE TABLE review (
	rev_no number(10) NOT NULL,
	rno number(10) NOT NULL,
	rev_writer varchar2(10) NOT NULL,
	write_day date NULL,
	rev_content varchar2(1000) NULL,
	h_username varchar2(10) NOT NULL,
	CONSTRAINT PK_REVIEW PRIMARY KEY (rev_no),
	CONSTRAINT FK_reservation_TO_review_1 FOREIGN KEY (rno) REFERENCES reservation (rno),
	CONSTRAINT FK_user_member_TO_review_1 FOREIGN KEY (rev_writer) REFERENCES user_member (username),
	CONSTRAINT FK_hospital_member_TO_review_1 FOREIGN KEY (h_username) REFERENCES hospital_member (h_username)
);

-- 18. notice : user_member 참조
CREATE TABLE notice (
	nno number(10) NOT NULL,
	n_title varchar2(50) NULL,
	username varchar2(10) NOT NULL,
	n_write_day date NULL,
	n_content varchar2(1000) NULL,
	n_is_top number(1) NULL,
	CONSTRAINT PK_NOTICE PRIMARY KEY (nno),
	CONSTRAINT FK_user_member_TO_notice_1 FOREIGN KEY (username) REFERENCES user_member (username)
);


alter table schedule rename COLUMN h_notice to s_notice;
alter table review rename column write_day to rev_write_day;
alter table pet rename column breed to p_breed;
-- uniq 제약 설정
alter table reservation add constraint uniq_reservation_schedule UNIQUE (schedule, h_username);

-- uniq 설정 됐는지 확인
select constraint_name, constraint_type from USER_CONSTRAINTS where TABLE_NAME='RESERVATION';

alter table hospital_member modify(h_address varchar2(50));
alter table user_member modify(status varchar2(10));
alter table user_member modify(role varchar2(10));
alter table hospital_member modify(h_location number(25,15));
alter table hospital_member modify(h_longitude number(25,15));




create sequence schedule_seq;
create sequence treat_seq;
create sequence notice_seq;
create sequence qna_question_seq;
create sequence qna_answer_seq;
create sequence adoption_seq;
create sequence reservation_seq;
create sequence review_seq;
create sequence pet_seq;
create sequence surgical_history_seq;
create sequence chronic_illness_seq;
create sequence pay_seq;